// Code generated by protoc-gen-go. DO NOT EDIT.
// source: aquaman.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResolvRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolvRequest) Reset()         { *m = ResolvRequest{} }
func (m *ResolvRequest) String() string { return proto.CompactTextString(m) }
func (*ResolvRequest) ProtoMessage()    {}
func (*ResolvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{0}
}

func (m *ResolvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolvRequest.Unmarshal(m, b)
}
func (m *ResolvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolvRequest.Marshal(b, m, deterministic)
}
func (m *ResolvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolvRequest.Merge(m, src)
}
func (m *ResolvRequest) XXX_Size() int {
	return xxx_messageInfo_ResolvRequest.Size(m)
}
func (m *ResolvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolvRequest proto.InternalMessageInfo

func (m *ResolvRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ResolvResponse struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolvResponse) Reset()         { *m = ResolvResponse{} }
func (m *ResolvResponse) String() string { return proto.CompactTextString(m) }
func (*ResolvResponse) ProtoMessage()    {}
func (*ResolvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{1}
}

func (m *ResolvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolvResponse.Unmarshal(m, b)
}
func (m *ResolvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolvResponse.Marshal(b, m, deterministic)
}
func (m *ResolvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolvResponse.Merge(m, src)
}
func (m *ResolvResponse) XXX_Size() int {
	return xxx_messageInfo_ResolvResponse.Size(m)
}
func (m *ResolvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolvResponse proto.InternalMessageInfo

func (m *ResolvResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type AnlsRequest struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainDict           []string `protobuf:"bytes,2,rep,name=domain_dict,json=domainDict,proto3" json:"domain_dict,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnlsRequest) Reset()         { *m = AnlsRequest{} }
func (m *AnlsRequest) String() string { return proto.CompactTextString(m) }
func (*AnlsRequest) ProtoMessage()    {}
func (*AnlsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{2}
}

func (m *AnlsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnlsRequest.Unmarshal(m, b)
}
func (m *AnlsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnlsRequest.Marshal(b, m, deterministic)
}
func (m *AnlsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnlsRequest.Merge(m, src)
}
func (m *AnlsRequest) XXX_Size() int {
	return xxx_messageInfo_AnlsRequest.Size(m)
}
func (m *AnlsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnlsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnlsRequest proto.InternalMessageInfo

func (m *AnlsRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *AnlsRequest) GetDomainDict() []string {
	if m != nil {
		return m.DomainDict
	}
	return nil
}

type AnlsResponse struct {
	Registrar            string   `protobuf:"bytes,1,opt,name=registrar,proto3" json:"registrar,omitempty"`
	RegisterDate         string   `protobuf:"bytes,2,opt,name=register_date,json=registerDate,proto3" json:"register_date,omitempty"`
	NameServer           string   `protobuf:"bytes,3,opt,name=name_server,json=nameServer,proto3" json:"name_server,omitempty"`
	DomainServer         string   `protobuf:"bytes,4,opt,name=domain_server,json=domainServer,proto3" json:"domain_server,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	SubdomainList        string   `protobuf:"bytes,6,opt,name=subdomain_list,json=subdomainList,proto3" json:"subdomain_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnlsResponse) Reset()         { *m = AnlsResponse{} }
func (m *AnlsResponse) String() string { return proto.CompactTextString(m) }
func (*AnlsResponse) ProtoMessage()    {}
func (*AnlsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{3}
}

func (m *AnlsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnlsResponse.Unmarshal(m, b)
}
func (m *AnlsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnlsResponse.Marshal(b, m, deterministic)
}
func (m *AnlsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnlsResponse.Merge(m, src)
}
func (m *AnlsResponse) XXX_Size() int {
	return xxx_messageInfo_AnlsResponse.Size(m)
}
func (m *AnlsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnlsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnlsResponse proto.InternalMessageInfo

func (m *AnlsResponse) GetRegistrar() string {
	if m != nil {
		return m.Registrar
	}
	return ""
}

func (m *AnlsResponse) GetRegisterDate() string {
	if m != nil {
		return m.RegisterDate
	}
	return ""
}

func (m *AnlsResponse) GetNameServer() string {
	if m != nil {
		return m.NameServer
	}
	return ""
}

func (m *AnlsResponse) GetDomainServer() string {
	if m != nil {
		return m.DomainServer
	}
	return ""
}

func (m *AnlsResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AnlsResponse) GetSubdomainList() string {
	if m != nil {
		return m.SubdomainList
	}
	return ""
}

type LocRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocRequest) Reset()         { *m = LocRequest{} }
func (m *LocRequest) String() string { return proto.CompactTextString(m) }
func (*LocRequest) ProtoMessage()    {}
func (*LocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{4}
}

func (m *LocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocRequest.Unmarshal(m, b)
}
func (m *LocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocRequest.Marshal(b, m, deterministic)
}
func (m *LocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocRequest.Merge(m, src)
}
func (m *LocRequest) XXX_Size() int {
	return xxx_messageInfo_LocRequest.Size(m)
}
func (m *LocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LocRequest proto.InternalMessageInfo

func (m *LocRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type LocResponse struct {
	Area                 string   `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	Isp                  string   `protobuf:"bytes,2,opt,name=isp,proto3" json:"isp,omitempty"`
	Gps                  string   `protobuf:"bytes,3,opt,name=gps,proto3" json:"gps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocResponse) Reset()         { *m = LocResponse{} }
func (m *LocResponse) String() string { return proto.CompactTextString(m) }
func (*LocResponse) ProtoMessage()    {}
func (*LocResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{5}
}

func (m *LocResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocResponse.Unmarshal(m, b)
}
func (m *LocResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocResponse.Marshal(b, m, deterministic)
}
func (m *LocResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocResponse.Merge(m, src)
}
func (m *LocResponse) XXX_Size() int {
	return xxx_messageInfo_LocResponse.Size(m)
}
func (m *LocResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LocResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LocResponse proto.InternalMessageInfo

func (m *LocResponse) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *LocResponse) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func (m *LocResponse) GetGps() string {
	if m != nil {
		return m.Gps
	}
	return ""
}

type AlvRequest struct {
	Net                  string   `protobuf:"bytes,1,opt,name=net,proto3" json:"net,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlvRequest) Reset()         { *m = AlvRequest{} }
func (m *AlvRequest) String() string { return proto.CompactTextString(m) }
func (*AlvRequest) ProtoMessage()    {}
func (*AlvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{6}
}

func (m *AlvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlvRequest.Unmarshal(m, b)
}
func (m *AlvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlvRequest.Marshal(b, m, deterministic)
}
func (m *AlvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlvRequest.Merge(m, src)
}
func (m *AlvRequest) XXX_Size() int {
	return xxx_messageInfo_AlvRequest.Size(m)
}
func (m *AlvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlvRequest proto.InternalMessageInfo

func (m *AlvRequest) GetNet() string {
	if m != nil {
		return m.Net
	}
	return ""
}

type AlvResponse struct {
	Hosts                []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlvResponse) Reset()         { *m = AlvResponse{} }
func (m *AlvResponse) String() string { return proto.CompactTextString(m) }
func (*AlvResponse) ProtoMessage()    {}
func (*AlvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{7}
}

func (m *AlvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlvResponse.Unmarshal(m, b)
}
func (m *AlvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlvResponse.Marshal(b, m, deterministic)
}
func (m *AlvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlvResponse.Merge(m, src)
}
func (m *AlvResponse) XXX_Size() int {
	return xxx_messageInfo_AlvResponse.Size(m)
}
func (m *AlvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlvResponse proto.InternalMessageInfo

func (m *AlvResponse) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type DetlRequest struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Ports                []string `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetlRequest) Reset()         { *m = DetlRequest{} }
func (m *DetlRequest) String() string { return proto.CompactTextString(m) }
func (*DetlRequest) ProtoMessage()    {}
func (*DetlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{8}
}

func (m *DetlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetlRequest.Unmarshal(m, b)
}
func (m *DetlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetlRequest.Marshal(b, m, deterministic)
}
func (m *DetlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetlRequest.Merge(m, src)
}
func (m *DetlRequest) XXX_Size() int {
	return xxx_messageInfo_DetlRequest.Size(m)
}
func (m *DetlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DetlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DetlRequest proto.InternalMessageInfo

func (m *DetlRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DetlRequest) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

type SrvInfo struct {
	Port                 string   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	State                string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Product              string   `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Extrainfo            string   `protobuf:"bytes,6,opt,name=extrainfo,proto3" json:"extrainfo,omitempty"`
	Conf                 string   `protobuf:"bytes,7,opt,name=conf,proto3" json:"conf,omitempty"`
	Cpe                  string   `protobuf:"bytes,8,opt,name=cpe,proto3" json:"cpe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrvInfo) Reset()         { *m = SrvInfo{} }
func (m *SrvInfo) String() string { return proto.CompactTextString(m) }
func (*SrvInfo) ProtoMessage()    {}
func (*SrvInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{9}
}

func (m *SrvInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrvInfo.Unmarshal(m, b)
}
func (m *SrvInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrvInfo.Marshal(b, m, deterministic)
}
func (m *SrvInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrvInfo.Merge(m, src)
}
func (m *SrvInfo) XXX_Size() int {
	return xxx_messageInfo_SrvInfo.Size(m)
}
func (m *SrvInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrvInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrvInfo proto.InternalMessageInfo

func (m *SrvInfo) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *SrvInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SrvInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SrvInfo) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *SrvInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SrvInfo) GetExtrainfo() string {
	if m != nil {
		return m.Extrainfo
	}
	return ""
}

func (m *SrvInfo) GetConf() string {
	if m != nil {
		return m.Conf
	}
	return ""
}

func (m *SrvInfo) GetCpe() string {
	if m != nil {
		return m.Cpe
	}
	return ""
}

type DetlResponse struct {
	Os                   string     `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Vendor               string     `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Array                []*SrvInfo `protobuf:"bytes,3,rep,name=array,proto3" json:"array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DetlResponse) Reset()         { *m = DetlResponse{} }
func (m *DetlResponse) String() string { return proto.CompactTextString(m) }
func (*DetlResponse) ProtoMessage()    {}
func (*DetlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{10}
}

func (m *DetlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetlResponse.Unmarshal(m, b)
}
func (m *DetlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetlResponse.Marshal(b, m, deterministic)
}
func (m *DetlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetlResponse.Merge(m, src)
}
func (m *DetlResponse) XXX_Size() int {
	return xxx_messageInfo_DetlResponse.Size(m)
}
func (m *DetlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DetlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DetlResponse proto.InternalMessageInfo

func (m *DetlResponse) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *DetlResponse) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *DetlResponse) GetArray() []*SrvInfo {
	if m != nil {
		return m.Array
	}
	return nil
}

type SpiRequest struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpiRequest) Reset()         { *m = SpiRequest{} }
func (m *SpiRequest) String() string { return proto.CompactTextString(m) }
func (*SpiRequest) ProtoMessage()    {}
func (*SpiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{11}
}

func (m *SpiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiRequest.Unmarshal(m, b)
}
func (m *SpiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiRequest.Marshal(b, m, deterministic)
}
func (m *SpiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiRequest.Merge(m, src)
}
func (m *SpiRequest) XXX_Size() int {
	return xxx_messageInfo_SpiRequest.Size(m)
}
func (m *SpiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpiRequest proto.InternalMessageInfo

func (m *SpiRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *SpiRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type SpiResponse struct {
	StartUrl             string   `protobuf:"bytes,1,opt,name=start_url,json=startUrl,proto3" json:"start_url,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Server               string   `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	ContentType          string   `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	LoginList            []string `protobuf:"bytes,5,rep,name=login_list,json=loginList,proto3" json:"login_list,omitempty"`
	UploadList           []string `protobuf:"bytes,6,rep,name=upload_list,json=uploadList,proto3" json:"upload_list,omitempty"`
	SubDomain            []string `protobuf:"bytes,7,rep,name=sub_domain,json=subDomain,proto3" json:"sub_domain,omitempty"`
	RouteList            []string `protobuf:"bytes,8,rep,name=route_list,json=routeList,proto3" json:"route_list,omitempty"`
	ResourceList         []string `protobuf:"bytes,9,rep,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpiResponse) Reset()         { *m = SpiResponse{} }
func (m *SpiResponse) String() string { return proto.CompactTextString(m) }
func (*SpiResponse) ProtoMessage()    {}
func (*SpiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{12}
}

func (m *SpiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpiResponse.Unmarshal(m, b)
}
func (m *SpiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpiResponse.Marshal(b, m, deterministic)
}
func (m *SpiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpiResponse.Merge(m, src)
}
func (m *SpiResponse) XXX_Size() int {
	return xxx_messageInfo_SpiResponse.Size(m)
}
func (m *SpiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SpiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SpiResponse proto.InternalMessageInfo

func (m *SpiResponse) GetStartUrl() string {
	if m != nil {
		return m.StartUrl
	}
	return ""
}

func (m *SpiResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SpiResponse) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *SpiResponse) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *SpiResponse) GetLoginList() []string {
	if m != nil {
		return m.LoginList
	}
	return nil
}

func (m *SpiResponse) GetUploadList() []string {
	if m != nil {
		return m.UploadList
	}
	return nil
}

func (m *SpiResponse) GetSubDomain() []string {
	if m != nil {
		return m.SubDomain
	}
	return nil
}

func (m *SpiResponse) GetRouteList() []string {
	if m != nil {
		return m.RouteList
	}
	return nil
}

func (m *SpiResponse) GetResourceList() []string {
	if m != nil {
		return m.ResourceList
	}
	return nil
}

type PocRequest struct {
	Exploit              bool     `protobuf:"varint,1,opt,name=exploit,proto3" json:"exploit,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	AssetId              string   `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	VulId                string   `protobuf:"bytes,5,opt,name=vul_id,json=vulId,proto3" json:"vul_id,omitempty"`
	PocContent           string   `protobuf:"bytes,6,opt,name=poc_content,json=pocContent,proto3" json:"poc_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PocRequest) Reset()         { *m = PocRequest{} }
func (m *PocRequest) String() string { return proto.CompactTextString(m) }
func (*PocRequest) ProtoMessage()    {}
func (*PocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{13}
}

func (m *PocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PocRequest.Unmarshal(m, b)
}
func (m *PocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PocRequest.Marshal(b, m, deterministic)
}
func (m *PocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PocRequest.Merge(m, src)
}
func (m *PocRequest) XXX_Size() int {
	return xxx_messageInfo_PocRequest.Size(m)
}
func (m *PocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PocRequest proto.InternalMessageInfo

func (m *PocRequest) GetExploit() bool {
	if m != nil {
		return m.Exploit
	}
	return false
}

func (m *PocRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *PocRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *PocRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *PocRequest) GetVulId() string {
	if m != nil {
		return m.VulId
	}
	return ""
}

func (m *PocRequest) GetPocContent() string {
	if m != nil {
		return m.PocContent
	}
	return ""
}

type PocResponse struct {
	VerifyUrl            string   `protobuf:"bytes,1,opt,name=verify_url,json=verifyUrl,proto3" json:"verify_url,omitempty"`
	VerifyPayload        string   `protobuf:"bytes,2,opt,name=verify_payload,json=verifyPayload,proto3" json:"verify_payload,omitempty"`
	VerifyResult         string   `protobuf:"bytes,3,opt,name=verify_result,json=verifyResult,proto3" json:"verify_result,omitempty"`
	ExploitUrl           string   `protobuf:"bytes,4,opt,name=exploit_url,json=exploitUrl,proto3" json:"exploit_url,omitempty"`
	ExploitPayload       string   `protobuf:"bytes,5,opt,name=exploit_payload,json=exploitPayload,proto3" json:"exploit_payload,omitempty"`
	ExploitResult        string   `protobuf:"bytes,6,opt,name=exploit_result,json=exploitResult,proto3" json:"exploit_result,omitempty"`
	WebshellUrl          string   `protobuf:"bytes,7,opt,name=webshell_url,json=webshellUrl,proto3" json:"webshell_url,omitempty"`
	WebshellPayload      string   `protobuf:"bytes,8,opt,name=webshell_payload,json=webshellPayload,proto3" json:"webshell_payload,omitempty"`
	WebshellResult       string   `protobuf:"bytes,9,opt,name=webshell_result,json=webshellResult,proto3" json:"webshell_result,omitempty"`
	TrojanUrl            string   `protobuf:"bytes,10,opt,name=trojan_url,json=trojanUrl,proto3" json:"trojan_url,omitempty"`
	TrojanPayload        string   `protobuf:"bytes,11,opt,name=trojan_payload,json=trojanPayload,proto3" json:"trojan_payload,omitempty"`
	TrojanResult         string   `protobuf:"bytes,12,opt,name=trojan_result,json=trojanResult,proto3" json:"trojan_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PocResponse) Reset()         { *m = PocResponse{} }
func (m *PocResponse) String() string { return proto.CompactTextString(m) }
func (*PocResponse) ProtoMessage()    {}
func (*PocResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{14}
}

func (m *PocResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PocResponse.Unmarshal(m, b)
}
func (m *PocResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PocResponse.Marshal(b, m, deterministic)
}
func (m *PocResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PocResponse.Merge(m, src)
}
func (m *PocResponse) XXX_Size() int {
	return xxx_messageInfo_PocResponse.Size(m)
}
func (m *PocResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PocResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PocResponse proto.InternalMessageInfo

func (m *PocResponse) GetVerifyUrl() string {
	if m != nil {
		return m.VerifyUrl
	}
	return ""
}

func (m *PocResponse) GetVerifyPayload() string {
	if m != nil {
		return m.VerifyPayload
	}
	return ""
}

func (m *PocResponse) GetVerifyResult() string {
	if m != nil {
		return m.VerifyResult
	}
	return ""
}

func (m *PocResponse) GetExploitUrl() string {
	if m != nil {
		return m.ExploitUrl
	}
	return ""
}

func (m *PocResponse) GetExploitPayload() string {
	if m != nil {
		return m.ExploitPayload
	}
	return ""
}

func (m *PocResponse) GetExploitResult() string {
	if m != nil {
		return m.ExploitResult
	}
	return ""
}

func (m *PocResponse) GetWebshellUrl() string {
	if m != nil {
		return m.WebshellUrl
	}
	return ""
}

func (m *PocResponse) GetWebshellPayload() string {
	if m != nil {
		return m.WebshellPayload
	}
	return ""
}

func (m *PocResponse) GetWebshellResult() string {
	if m != nil {
		return m.WebshellResult
	}
	return ""
}

func (m *PocResponse) GetTrojanUrl() string {
	if m != nil {
		return m.TrojanUrl
	}
	return ""
}

func (m *PocResponse) GetTrojanPayload() string {
	if m != nil {
		return m.TrojanPayload
	}
	return ""
}

func (m *PocResponse) GetTrojanResult() string {
	if m != nil {
		return m.TrojanResult
	}
	return ""
}

type AuthRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Args                 string   `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	TargetList           []string `protobuf:"bytes,3,rep,name=target_list,json=targetList,proto3" json:"target_list,omitempty"`
	UsernameList         []string `protobuf:"bytes,4,rep,name=username_list,json=usernameList,proto3" json:"username_list,omitempty"`
	PasswordList         []string `protobuf:"bytes,5,rep,name=password_list,json=passwordList,proto3" json:"password_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{15}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *AuthRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *AuthRequest) GetTargetList() []string {
	if m != nil {
		return m.TargetList
	}
	return nil
}

func (m *AuthRequest) GetUsernameList() []string {
	if m != nil {
		return m.UsernameList
	}
	return nil
}

func (m *AuthRequest) GetPasswordList() []string {
	if m != nil {
		return m.PasswordList
	}
	return nil
}

type AuthInfo struct {
	Target               string   `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Command              string   `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthInfo) Reset()         { *m = AuthInfo{} }
func (m *AuthInfo) String() string { return proto.CompactTextString(m) }
func (*AuthInfo) ProtoMessage()    {}
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{16}
}

func (m *AuthInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthInfo.Unmarshal(m, b)
}
func (m *AuthInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthInfo.Marshal(b, m, deterministic)
}
func (m *AuthInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthInfo.Merge(m, src)
}
func (m *AuthInfo) XXX_Size() int {
	return xxx_messageInfo_AuthInfo.Size(m)
}
func (m *AuthInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AuthInfo proto.InternalMessageInfo

func (m *AuthInfo) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *AuthInfo) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *AuthInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthInfo) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type AuthResponse struct {
	Array                []*AuthInfo `protobuf:"bytes,1,rep,name=array,proto3" json:"array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{17}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetArray() []*AuthInfo {
	if m != nil {
		return m.Array
	}
	return nil
}

type TrapRequest struct {
	TargetList           []string `protobuf:"bytes,1,rep,name=target_list,json=targetList,proto3" json:"target_list,omitempty"`
	TrapId               string   `protobuf:"bytes,2,opt,name=trap_id,json=trapId,proto3" json:"trap_id,omitempty"`
	PluginText           string   `protobuf:"bytes,3,opt,name=plugin_text,json=pluginText,proto3" json:"plugin_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrapRequest) Reset()         { *m = TrapRequest{} }
func (m *TrapRequest) String() string { return proto.CompactTextString(m) }
func (*TrapRequest) ProtoMessage()    {}
func (*TrapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{18}
}

func (m *TrapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrapRequest.Unmarshal(m, b)
}
func (m *TrapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrapRequest.Marshal(b, m, deterministic)
}
func (m *TrapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrapRequest.Merge(m, src)
}
func (m *TrapRequest) XXX_Size() int {
	return xxx_messageInfo_TrapRequest.Size(m)
}
func (m *TrapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrapRequest proto.InternalMessageInfo

func (m *TrapRequest) GetTargetList() []string {
	if m != nil {
		return m.TargetList
	}
	return nil
}

func (m *TrapRequest) GetTrapId() string {
	if m != nil {
		return m.TrapId
	}
	return ""
}

func (m *TrapRequest) GetPluginText() string {
	if m != nil {
		return m.PluginText
	}
	return ""
}

type VerifyInfo struct {
	Verify               string   `protobuf:"bytes,1,opt,name=verify,proto3" json:"verify,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyInfo) Reset()         { *m = VerifyInfo{} }
func (m *VerifyInfo) String() string { return proto.CompactTextString(m) }
func (*VerifyInfo) ProtoMessage()    {}
func (*VerifyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{19}
}

func (m *VerifyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyInfo.Unmarshal(m, b)
}
func (m *VerifyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyInfo.Marshal(b, m, deterministic)
}
func (m *VerifyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyInfo.Merge(m, src)
}
func (m *VerifyInfo) XXX_Size() int {
	return xxx_messageInfo_VerifyInfo.Size(m)
}
func (m *VerifyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyInfo proto.InternalMessageInfo

func (m *VerifyInfo) GetVerify() string {
	if m != nil {
		return m.Verify
	}
	return ""
}

type TrapResponse struct {
	Array                []*VerifyInfo `protobuf:"bytes,1,rep,name=array,proto3" json:"array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TrapResponse) Reset()         { *m = TrapResponse{} }
func (m *TrapResponse) String() string { return proto.CompactTextString(m) }
func (*TrapResponse) ProtoMessage()    {}
func (*TrapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ed4f53594f416d0, []int{20}
}

func (m *TrapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrapResponse.Unmarshal(m, b)
}
func (m *TrapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrapResponse.Marshal(b, m, deterministic)
}
func (m *TrapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrapResponse.Merge(m, src)
}
func (m *TrapResponse) XXX_Size() int {
	return xxx_messageInfo_TrapResponse.Size(m)
}
func (m *TrapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TrapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TrapResponse proto.InternalMessageInfo

func (m *TrapResponse) GetArray() []*VerifyInfo {
	if m != nil {
		return m.Array
	}
	return nil
}

func init() {
	proto.RegisterType((*ResolvRequest)(nil), "grpc.ResolvRequest")
	proto.RegisterType((*ResolvResponse)(nil), "grpc.ResolvResponse")
	proto.RegisterType((*AnlsRequest)(nil), "grpc.AnlsRequest")
	proto.RegisterType((*AnlsResponse)(nil), "grpc.AnlsResponse")
	proto.RegisterType((*LocRequest)(nil), "grpc.LocRequest")
	proto.RegisterType((*LocResponse)(nil), "grpc.LocResponse")
	proto.RegisterType((*AlvRequest)(nil), "grpc.AlvRequest")
	proto.RegisterType((*AlvResponse)(nil), "grpc.AlvResponse")
	proto.RegisterType((*DetlRequest)(nil), "grpc.DetlRequest")
	proto.RegisterType((*SrvInfo)(nil), "grpc.SrvInfo")
	proto.RegisterType((*DetlResponse)(nil), "grpc.DetlResponse")
	proto.RegisterType((*SpiRequest)(nil), "grpc.SpiRequest")
	proto.RegisterType((*SpiResponse)(nil), "grpc.SpiResponse")
	proto.RegisterType((*PocRequest)(nil), "grpc.PocRequest")
	proto.RegisterType((*PocResponse)(nil), "grpc.PocResponse")
	proto.RegisterType((*AuthRequest)(nil), "grpc.AuthRequest")
	proto.RegisterType((*AuthInfo)(nil), "grpc.AuthInfo")
	proto.RegisterType((*AuthResponse)(nil), "grpc.AuthResponse")
	proto.RegisterType((*TrapRequest)(nil), "grpc.TrapRequest")
	proto.RegisterType((*VerifyInfo)(nil), "grpc.VerifyInfo")
	proto.RegisterType((*TrapResponse)(nil), "grpc.TrapResponse")
}

func init() { proto.RegisterFile("aquaman.proto", fileDescriptor_3ed4f53594f416d0) }

var fileDescriptor_3ed4f53594f416d0 = []byte{
	// 1258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x56, 0xcd, 0x72, 0x1c, 0x35,
	0x10, 0xf6, 0x78, 0x7f, 0xbc, 0xdb, 0xb3, 0x76, 0x9c, 0x21, 0x84, 0xc5, 0xc4, 0xe0, 0x4c, 0x12,
	0x12, 0x2e, 0x0e, 0x71, 0x02, 0x17, 0x4e, 0x0b, 0x86, 0x4a, 0xaa, 0x72, 0x70, 0xad, 0x43, 0xa8,
	0x82, 0xc3, 0x96, 0x3c, 0x23, 0xaf, 0x87, 0x1a, 0x8f, 0x14, 0x49, 0xb3, 0xf1, 0xbe, 0x04, 0x77,
	0xaa, 0x28, 0x8e, 0x5c, 0x78, 0x08, 0x1e, 0x80, 0x3b, 0xcf, 0x43, 0x49, 0xdd, 0xbd, 0x33, 0xeb,
	0x14, 0xc5, 0x4d, 0xfd, 0xa9, 0x5b, 0xdd, 0xfd, 0x75, 0xb7, 0x24, 0xd8, 0x16, 0x6f, 0x6a, 0x71,
	0x29, 0xaa, 0x43, 0x6d, 0x94, 0x53, 0x49, 0x77, 0x6e, 0x74, 0x96, 0x3e, 0x84, 0xed, 0xa9, 0xb4,
	0xaa, 0x5c, 0x4c, 0xe5, 0x9b, 0x5a, 0x5a, 0x97, 0xdc, 0x86, 0x7e, 0xae, 0x2e, 0x45, 0x51, 0x8d,
	0xa3, 0x83, 0xe8, 0xd1, 0x70, 0x4a, 0x52, 0x7a, 0x00, 0x3b, 0xac, 0x68, 0xb5, 0xaa, 0xac, 0x4c,
	0x76, 0x60, 0xb3, 0xd0, 0xa4, 0xb5, 0x59, 0xe8, 0xf4, 0x3b, 0x88, 0x27, 0x55, 0x69, 0xff, 0xe7,
	0xa0, 0xe4, 0x13, 0x88, 0x71, 0x35, 0xcb, 0x8b, 0xcc, 0x8d, 0x37, 0x0f, 0x3a, 0x8f, 0x86, 0x53,
	0x40, 0xe8, 0xb8, 0xc8, 0x5c, 0xfa, 0x4f, 0x04, 0x23, 0x3c, 0x88, 0x1c, 0xdd, 0x81, 0xa1, 0x91,
	0xf3, 0xc2, 0x3a, 0x23, 0x0c, 0x1d, 0xd6, 0x00, 0xc9, 0x3d, 0xd8, 0x46, 0x41, 0x9a, 0x59, 0x2e,
	0x9c, 0x1c, 0x6f, 0x06, 0x8d, 0x11, 0x83, 0xc7, 0xc2, 0x49, 0xef, 0xb4, 0x12, 0x97, 0x72, 0x66,
	0xa5, 0x59, 0x48, 0x33, 0xee, 0x04, 0x15, 0xf0, 0xd0, 0x69, 0x40, 0xfc, 0x29, 0x14, 0x15, 0xa9,
	0x74, 0xf1, 0x14, 0x04, 0x49, 0xe9, 0x36, 0xf4, 0xad, 0x13, 0xae, 0xb6, 0xe3, 0x1e, 0xa6, 0x84,
	0x52, 0xf2, 0x00, 0x76, 0x6c, 0x7d, 0x46, 0xf6, 0x65, 0x61, 0xdd, 0xb8, 0x1f, 0xf6, 0xb7, 0x57,
	0xe8, 0xcb, 0xc2, 0xba, 0xf4, 0x0e, 0xc0, 0x4b, 0x95, 0x31, 0x3f, 0xd7, 0xe9, 0xfb, 0x16, 0xe2,
	0xb0, 0x4b, 0x49, 0x27, 0xd0, 0x15, 0x46, 0x0a, 0x52, 0x08, 0xeb, 0x64, 0x17, 0x3a, 0x85, 0xd5,
	0x94, 0xa0, 0x5f, 0x7a, 0x64, 0xae, 0x2d, 0xe5, 0xe3, 0x97, 0xe9, 0xc7, 0x00, 0x93, 0xa6, 0x9a,
	0xbb, 0xd0, 0xa9, 0xa4, 0xa3, 0x43, 0xfc, 0x32, 0xbd, 0x07, 0xf1, 0xa4, 0x55, 0xc4, 0x5b, 0xd0,
	0xbb, 0x50, 0xd6, 0xd9, 0x71, 0x14, 0xea, 0x80, 0x42, 0xfa, 0x14, 0xe2, 0x63, 0xe9, 0xca, 0xff,
	0x08, 0xd5, 0x1b, 0x69, 0x65, 0x9c, 0xa5, 0xe2, 0xa1, 0x90, 0xfe, 0x15, 0xc1, 0xd6, 0xa9, 0x59,
	0xbc, 0xa8, 0xce, 0x95, 0x8f, 0xde, 0x83, 0x1c, 0xbd, 0x5f, 0x7b, 0xcc, 0x13, 0x4e, 0xe1, 0x87,
	0xb5, 0x3f, 0xc9, 0x73, 0x28, 0x29, 0x03, 0x14, 0x92, 0x31, 0x6c, 0x69, 0xa3, 0xf2, 0x3a, 0x73,
	0x54, 0x06, 0x16, 0xfd, 0xce, 0x42, 0x1a, 0x5b, 0xa8, 0x8a, 0x4a, 0xc0, 0xa2, 0x6f, 0x12, 0x79,
	0xe5, 0x8c, 0x28, 0xaa, 0x73, 0x45, 0xf4, 0x37, 0x80, 0xf7, 0x9d, 0xa9, 0xea, 0x7c, 0xbc, 0x85,
	0xbe, 0xfd, 0xda, 0x73, 0x93, 0x69, 0x39, 0x1e, 0x20, 0x37, 0x99, 0x96, 0xe9, 0x4f, 0x30, 0xc2,
	0xb4, 0x9b, 0x0e, 0x57, 0x96, 0xf3, 0x56, 0xd6, 0xd7, 0x7f, 0x21, 0xab, 0x5c, 0x19, 0xca, 0x81,
	0xa4, 0xe4, 0x1e, 0xf4, 0x84, 0x31, 0x62, 0x39, 0xee, 0x1c, 0x74, 0x1e, 0xc5, 0x47, 0xdb, 0x87,
	0x7e, 0xb4, 0x0e, 0x89, 0x8b, 0x29, 0xee, 0xa5, 0xcf, 0x00, 0x4e, 0x75, 0xc1, 0x94, 0x26, 0xd0,
	0xf5, 0x54, 0x33, 0x41, 0x7e, 0xbd, 0x22, 0xcd, 0x1f, 0xde, 0x43, 0xd2, 0xd2, 0xdf, 0x37, 0x21,
	0x0e, 0x66, 0x14, 0xd2, 0x47, 0x30, 0xb4, 0x4e, 0x18, 0x37, 0xab, 0x4d, 0x49, 0xc6, 0x83, 0x00,
	0x7c, 0x6f, 0x4a, 0xcf, 0xa6, 0x2b, 0x5c, 0xc9, 0x14, 0xa3, 0x10, 0xba, 0xb6, 0xdd, 0xf6, 0x24,
	0x25, 0x77, 0x61, 0x94, 0xa9, 0xca, 0xc9, 0xca, 0xcd, 0xdc, 0x52, 0x4b, 0xa2, 0x3a, 0x26, 0xec,
	0xd5, 0x52, 0xcb, 0x64, 0x1f, 0xa0, 0x54, 0x73, 0x6e, 0xea, 0x5e, 0xa8, 0xf6, 0x30, 0x20, 0xbe,
	0xa1, 0xfd, 0x54, 0xd5, 0xba, 0x54, 0x22, 0xe7, 0xa6, 0x0f, 0xa3, 0x8c, 0x50, 0x50, 0xd8, 0x07,
	0xb0, 0xf5, 0xd9, 0x8c, 0xee, 0x81, 0x2d, 0xb4, 0xb7, 0xf5, 0xd9, 0x31, 0x5e, 0x05, 0xfb, 0x00,
	0x46, 0xd5, 0x4e, 0xa2, 0xf9, 0x00, 0xb7, 0x03, 0x12, 0xac, 0xc3, 0x64, 0x5b, 0x55, 0x9b, 0x8c,
	0x34, 0x86, 0x41, 0x63, 0xc4, 0x60, 0x18, 0xaa, 0x3f, 0x23, 0x80, 0x93, 0x66, 0xaa, 0xc6, 0xb0,
	0x25, 0xaf, 0x74, 0xa9, 0x0a, 0xa4, 0x76, 0x30, 0x65, 0xd1, 0xd3, 0xe0, 0x84, 0x99, 0x4b, 0xc7,
	0xc5, 0x43, 0xc9, 0x5b, 0x64, 0xea, 0xf2, 0x52, 0x54, 0x39, 0xf1, 0xc3, 0x62, 0xf2, 0x21, 0x0c,
	0x84, 0xb5, 0xd2, 0xcd, 0x8a, 0x9c, 0xfb, 0x30, 0xc8, 0x2f, 0xf2, 0xe4, 0x7d, 0xe8, 0x2f, 0xea,
	0xd2, 0x6f, 0x60, 0x1b, 0xf6, 0x16, 0x75, 0xf9, 0x22, 0xf7, 0x84, 0x68, 0x95, 0xcd, 0x88, 0x42,
	0x6a, 0x43, 0xd0, 0x2a, 0xfb, 0x06, 0x91, 0xf4, 0xef, 0x0e, 0xc4, 0x27, 0xad, 0x29, 0xdf, 0x07,
	0x58, 0x48, 0x53, 0x9c, 0x2f, 0x5b, 0xf5, 0x1c, 0x22, 0xe2, 0x0b, 0xfa, 0x00, 0x76, 0x68, 0x5b,
	0x8b, 0xa5, 0x67, 0x95, 0x62, 0xdf, 0x46, 0xf4, 0x04, 0x41, 0x4f, 0x14, 0xa9, 0x19, 0x69, 0xeb,
	0xd2, 0x51, 0x22, 0x23, 0x04, 0xa7, 0x01, 0xf3, 0xb1, 0x11, 0x15, 0xc1, 0x17, 0x26, 0x04, 0x04,
	0x79, 0x67, 0x0f, 0xe1, 0x06, 0x2b, 0xb0, 0x37, 0x4c, 0x6e, 0x87, 0x60, 0x76, 0xf7, 0x00, 0x18,
	0x61, 0x7f, 0x74, 0xdd, 0x11, 0x4a, 0x0e, 0xef, 0xc2, 0xe8, 0xad, 0x3c, 0xb3, 0x17, 0xb2, 0x2c,
	0x83, 0x47, 0x9c, 0xbd, 0x98, 0x31, 0xef, 0xf2, 0x33, 0xd8, 0x5d, 0xa9, 0xb0, 0x4f, 0x9c, 0xc7,
	0x1b, 0x8c, 0xb3, 0xd3, 0x87, 0xb0, 0x82, 0xd8, 0xeb, 0x10, 0xa3, 0x63, 0x98, 0xdc, 0xee, 0x03,
	0x38, 0xa3, 0x7e, 0x16, 0x55, 0x70, 0x0a, 0x48, 0x29, 0x22, 0x44, 0x29, 0x6d, 0xb3, 0xc3, 0x18,
	0x83, 0x47, 0xb4, 0x45, 0x29, 0xa9, 0x91, 0xb3, 0x11, 0x52, 0x8a, 0x20, 0xba, 0x4a, 0xff, 0x88,
	0x20, 0x9e, 0xd4, 0xee, 0xa2, 0xd5, 0x7c, 0x7e, 0xb6, 0x8a, 0x4c, 0x52, 0x29, 0x59, 0xc4, 0xdb,
	0x7c, 0x6e, 0xf9, 0xee, 0xf3, 0x6b, 0x5f, 0x10, 0x6c, 0x41, 0x6c, 0xee, 0x0e, 0x4e, 0x0f, 0x42,
	0xdc, 0xff, 0xb5, 0x95, 0x26, 0x3c, 0x5c, 0x41, 0xa5, 0x8b, 0xfd, 0xcf, 0x20, 0x2b, 0x69, 0x61,
	0xed, 0x5b, 0x65, 0xf2, 0xf6, 0x94, 0x8e, 0x18, 0x0c, 0x43, 0xf2, 0x4b, 0x04, 0x03, 0x1f, 0x68,
	0xb8, 0x9b, 0x9b, 0x41, 0x88, 0xae, 0x0f, 0x02, 0x47, 0xbf, 0xb9, 0x1e, 0xfd, 0x1e, 0x0c, 0xd8,
	0x27, 0xb5, 0xd6, 0x4a, 0xf6, 0x7b, 0xec, 0x8a, 0x7a, 0x6a, 0x25, 0xb7, 0x47, 0xab, 0xb7, 0x36,
	0x5a, 0xe9, 0x33, 0x18, 0x21, 0x71, 0x34, 0x07, 0xf7, 0xf9, 0x06, 0x8d, 0xc2, 0x0d, 0xba, 0x83,
	0x37, 0x28, 0x87, 0xcc, 0x57, 0xe8, 0x05, 0xc4, 0xaf, 0x8c, 0xd0, 0x4c, 0xf7, 0x35, 0x02, 0xa3,
	0x77, 0x08, 0xfc, 0x00, 0xb6, 0x9c, 0x11, 0xda, 0x8f, 0x29, 0xcf, 0xbc, 0x11, 0x9a, 0xe6, 0xb4,
	0xac, 0xfd, 0xc5, 0xe6, 0xe4, 0x15, 0x8f, 0x0b, 0x20, 0xf4, 0x4a, 0x5e, 0xb9, 0xf4, 0x3e, 0xc0,
	0xeb, 0x30, 0x3c, 0xcc, 0x18, 0x8e, 0x12, 0x33, 0x86, 0x52, 0xfa, 0x25, 0x8c, 0x30, 0x1e, 0xca,
	0xe2, 0xd3, 0xf5, 0x2c, 0x76, 0x31, 0x8b, 0xe6, 0x20, 0xca, 0xe3, 0xc8, 0x41, 0x9f, 0x6e, 0xc0,
	0x2f, 0xa0, 0x8f, 0xbf, 0xaa, 0xe4, 0x3d, 0x54, 0x5e, 0xfb, 0x8c, 0xed, 0xdd, 0x5a, 0x07, 0xd1,
	0x4d, 0xba, 0x91, 0x3c, 0x85, 0xc1, 0xa4, 0x12, 0xe5, 0xd2, 0x16, 0x36, 0xb9, 0x49, 0x5c, 0x35,
	0x5f, 0xaf, 0xbd, 0xa4, 0x0d, 0xb1, 0xd1, 0xd1, 0x6f, 0x11, 0x74, 0x9f, 0xfb, 0x77, 0xe6, 0x09,
	0x0c, 0x5e, 0xaa, 0x4c, 0x38, 0xff, 0x6c, 0x52, 0x8c, 0xcd, 0xbf, 0x64, 0xef, 0x66, 0x0b, 0x59,
	0x39, 0x3c, 0x84, 0xde, 0xa4, 0x2c, 0x16, 0x92, 0xf5, 0x9b, 0x2f, 0x06, 0xeb, 0x4f, 0xd6, 0x02,
	0x7c, 0x02, 0xfd, 0x63, 0xe9, 0x44, 0x51, 0x72, 0x78, 0xad, 0xef, 0x04, 0x87, 0xd7, 0x7e, 0x6a,
	0xd3, 0x8d, 0xa3, 0xaf, 0x60, 0xf0, 0x83, 0x3c, 0x3b, 0xcd, 0x8c, 0xd0, 0xc9, 0x63, 0xe8, 0x9f,
	0xea, 0x22, 0x97, 0x86, 0xfd, 0x35, 0x2f, 0x27, 0xfb, 0x6b, 0x3d, 0x8a, 0xe9, 0xc6, 0xd1, 0xaf,
	0x11, 0x74, 0x5e, 0xd7, 0xa5, 0x37, 0x44, 0xba, 0xd9, 0xf0, 0xe4, 0x9d, 0xc4, 0x4e, 0xd6, 0x12,
	0xfb, 0x1c, 0x7a, 0xcf, 0x97, 0xb9, 0x11, 0x2b, 0x1a, 0x9b, 0x71, 0x5e, 0xd1, 0xd8, 0x6a, 0xd4,
	0x74, 0x23, 0x79, 0x0c, 0x5d, 0x5f, 0x74, 0x36, 0x68, 0x35, 0x24, 0x1b, 0xb4, 0x7b, 0x22, 0xdd,
	0xf8, 0xba, 0xff, 0x63, 0xf8, 0x6a, 0x9f, 0xf5, 0xc3, 0xbf, 0xfb, 0xe9, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xc4, 0xd8, 0x32, 0xee, 0x88, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DomainClient is the client API for Domain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DomainClient interface {
	// 定义域名解析方法, 资产需要解析IP存表
	Resolv(ctx context.Context, in *ResolvRequest, opts ...grpc.CallOption) (*ResolvResponse, error)
	// 定义域名查询、子域爆破方法
	Analysis(ctx context.Context, in *AnlsRequest, opts ...grpc.CallOption) (*AnlsResponse, error)
}

type domainClient struct {
	cc *grpc.ClientConn
}

func NewDomainClient(cc *grpc.ClientConn) DomainClient {
	return &domainClient{cc}
}

func (c *domainClient) Resolv(ctx context.Context, in *ResolvRequest, opts ...grpc.CallOption) (*ResolvResponse, error) {
	out := new(ResolvResponse)
	err := c.cc.Invoke(ctx, "/grpc.Domain/Resolv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainClient) Analysis(ctx context.Context, in *AnlsRequest, opts ...grpc.CallOption) (*AnlsResponse, error) {
	out := new(AnlsResponse)
	err := c.cc.Invoke(ctx, "/grpc.Domain/Analysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DomainServer is the server API for Domain service.
type DomainServer interface {
	// 定义域名解析方法, 资产需要解析IP存表
	Resolv(context.Context, *ResolvRequest) (*ResolvResponse, error)
	// 定义域名查询、子域爆破方法
	Analysis(context.Context, *AnlsRequest) (*AnlsResponse, error)
}

// UnimplementedDomainServer can be embedded to have forward compatible implementations.
type UnimplementedDomainServer struct {
}

func (*UnimplementedDomainServer) Resolv(ctx context.Context, req *ResolvRequest) (*ResolvResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resolv not implemented")
}
func (*UnimplementedDomainServer) Analysis(ctx context.Context, req *AnlsRequest) (*AnlsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Analysis not implemented")
}

func RegisterDomainServer(s *grpc.Server, srv DomainServer) {
	s.RegisterService(&_Domain_serviceDesc, srv)
}

func _Domain_Resolv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResolvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).Resolv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Domain/Resolv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).Resolv(ctx, req.(*ResolvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domain_Analysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnlsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).Analysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Domain/Analysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).Analysis(ctx, req.(*AnlsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Domain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Domain",
	HandlerType: (*DomainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Resolv",
			Handler:    _Domain_Resolv_Handler,
		},
		{
			MethodName: "Analysis",
			Handler:    _Domain_Analysis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aquaman.proto",
}

// HostClient is the client API for Host service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HostClient interface {
	// 定义IP信息查询方法
	Location(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*LocResponse, error)
	// 定义主机存活方法
	Alive(ctx context.Context, in *AlvRequest, opts ...grpc.CallOption) (*AlvResponse, error)
	// 定义服务识别方法
	Detail(ctx context.Context, in *DetlRequest, opts ...grpc.CallOption) (*DetlResponse, error)
}

type hostClient struct {
	cc *grpc.ClientConn
}

func NewHostClient(cc *grpc.ClientConn) HostClient {
	return &hostClient{cc}
}

func (c *hostClient) Location(ctx context.Context, in *LocRequest, opts ...grpc.CallOption) (*LocResponse, error) {
	out := new(LocResponse)
	err := c.cc.Invoke(ctx, "/grpc.Host/Location", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostClient) Alive(ctx context.Context, in *AlvRequest, opts ...grpc.CallOption) (*AlvResponse, error) {
	out := new(AlvResponse)
	err := c.cc.Invoke(ctx, "/grpc.Host/Alive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hostClient) Detail(ctx context.Context, in *DetlRequest, opts ...grpc.CallOption) (*DetlResponse, error) {
	out := new(DetlResponse)
	err := c.cc.Invoke(ctx, "/grpc.Host/Detail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HostServer is the server API for Host service.
type HostServer interface {
	// 定义IP信息查询方法
	Location(context.Context, *LocRequest) (*LocResponse, error)
	// 定义主机存活方法
	Alive(context.Context, *AlvRequest) (*AlvResponse, error)
	// 定义服务识别方法
	Detail(context.Context, *DetlRequest) (*DetlResponse, error)
}

// UnimplementedHostServer can be embedded to have forward compatible implementations.
type UnimplementedHostServer struct {
}

func (*UnimplementedHostServer) Location(ctx context.Context, req *LocRequest) (*LocResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Location not implemented")
}
func (*UnimplementedHostServer) Alive(ctx context.Context, req *AlvRequest) (*AlvResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Alive not implemented")
}
func (*UnimplementedHostServer) Detail(ctx context.Context, req *DetlRequest) (*DetlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detail not implemented")
}

func RegisterHostServer(s *grpc.Server, srv HostServer) {
	s.RegisterService(&_Host_serviceDesc, srv)
}

func _Host_Location_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServer).Location(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Host/Location",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServer).Location(ctx, req.(*LocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Host_Alive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServer).Alive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Host/Alive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServer).Alive(ctx, req.(*AlvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Host_Detail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HostServer).Detail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Host/Detail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HostServer).Detail(ctx, req.(*DetlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Host_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Host",
	HandlerType: (*HostServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Location",
			Handler:    _Host_Location_Handler,
		},
		{
			MethodName: "Alive",
			Handler:    _Host_Alive_Handler,
		},
		{
			MethodName: "Detail",
			Handler:    _Host_Detail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aquaman.proto",
}

// WebScrapClient is the client API for WebScrap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebScrapClient interface {
	// 定义Web爬虫
	Spider(ctx context.Context, in *SpiRequest, opts ...grpc.CallOption) (*SpiResponse, error)
}

type webScrapClient struct {
	cc *grpc.ClientConn
}

func NewWebScrapClient(cc *grpc.ClientConn) WebScrapClient {
	return &webScrapClient{cc}
}

func (c *webScrapClient) Spider(ctx context.Context, in *SpiRequest, opts ...grpc.CallOption) (*SpiResponse, error) {
	out := new(SpiResponse)
	err := c.cc.Invoke(ctx, "/grpc.WebScrap/Spider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebScrapServer is the server API for WebScrap service.
type WebScrapServer interface {
	// 定义Web爬虫
	Spider(context.Context, *SpiRequest) (*SpiResponse, error)
}

// UnimplementedWebScrapServer can be embedded to have forward compatible implementations.
type UnimplementedWebScrapServer struct {
}

func (*UnimplementedWebScrapServer) Spider(ctx context.Context, req *SpiRequest) (*SpiResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Spider not implemented")
}

func RegisterWebScrapServer(s *grpc.Server, srv WebScrapServer) {
	s.RegisterService(&_WebScrap_serviceDesc, srv)
}

func _WebScrap_Spider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebScrapServer).Spider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.WebScrap/Spider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebScrapServer).Spider(ctx, req.(*SpiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebScrap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.WebScrap",
	HandlerType: (*WebScrapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Spider",
			Handler:    _WebScrap_Spider_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aquaman.proto",
}

// VulClient is the client API for Vul service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VulClient interface {
	// 定义漏洞验证方法
	Verify(ctx context.Context, in *PocRequest, opts ...grpc.CallOption) (*PocResponse, error)
	// 定义权限爆破方法
	Hydra(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	// 定义蜜罐识别方法
	Trap(ctx context.Context, in *TrapRequest, opts ...grpc.CallOption) (*TrapResponse, error)
}

type vulClient struct {
	cc *grpc.ClientConn
}

func NewVulClient(cc *grpc.ClientConn) VulClient {
	return &vulClient{cc}
}

func (c *vulClient) Verify(ctx context.Context, in *PocRequest, opts ...grpc.CallOption) (*PocResponse, error) {
	out := new(PocResponse)
	err := c.cc.Invoke(ctx, "/grpc.Vul/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vulClient) Hydra(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/grpc.Vul/Hydra", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vulClient) Trap(ctx context.Context, in *TrapRequest, opts ...grpc.CallOption) (*TrapResponse, error) {
	out := new(TrapResponse)
	err := c.cc.Invoke(ctx, "/grpc.Vul/Trap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VulServer is the server API for Vul service.
type VulServer interface {
	// 定义漏洞验证方法
	Verify(context.Context, *PocRequest) (*PocResponse, error)
	// 定义权限爆破方法
	Hydra(context.Context, *AuthRequest) (*AuthResponse, error)
	// 定义蜜罐识别方法
	Trap(context.Context, *TrapRequest) (*TrapResponse, error)
}

// UnimplementedVulServer can be embedded to have forward compatible implementations.
type UnimplementedVulServer struct {
}

func (*UnimplementedVulServer) Verify(ctx context.Context, req *PocRequest) (*PocResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}
func (*UnimplementedVulServer) Hydra(ctx context.Context, req *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hydra not implemented")
}
func (*UnimplementedVulServer) Trap(ctx context.Context, req *TrapRequest) (*TrapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Trap not implemented")
}

func RegisterVulServer(s *grpc.Server, srv VulServer) {
	s.RegisterService(&_Vul_serviceDesc, srv)
}

func _Vul_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VulServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Vul/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VulServer).Verify(ctx, req.(*PocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vul_Hydra_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VulServer).Hydra(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Vul/Hydra",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VulServer).Hydra(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Vul_Trap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VulServer).Trap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Vul/Trap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VulServer).Trap(ctx, req.(*TrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vul_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Vul",
	HandlerType: (*VulServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Verify",
			Handler:    _Vul_Verify_Handler,
		},
		{
			MethodName: "Hydra",
			Handler:    _Vul_Hydra_Handler,
		},
		{
			MethodName: "Trap",
			Handler:    _Vul_Trap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aquaman.proto",
}
